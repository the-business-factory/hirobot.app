ARG alpine_version=latest

FROM --platform=$BUILDPLATFORM alpine:$alpine_version AS builder
ARG llvm_version=13
RUN apk add --update --no-cache \
    crystal shards \
    llvm${llvm_version}-dev llvm${llvm_version}-static \
    zlib-static yaml-static libxml2-dev pcre-dev libevent-static \
    libffi-dev git g++ make automake libtool autoconf curl
ARG TARGETARCH
WORKDIR /tmp/crystal
ARG crystal_version=1.6.2
RUN curl --retry 5 -sL https://github.com/crystal-lang/crystal/archive/refs/tags/${crystal_version}.tar.gz | \
  tar -zxf- --strip-components=1 && \
  gzip -9 man/crystal.1 && \
  mkdir .build && \
  make crystal static=1 release=1 target=$TARGETARCH-alpine-linux-musl PREFIX=/usr FLAGS="--no-debug" | tail -1 > .build/crystal.sh && \
  rm src/llvm/ext/llvm_ext.o
WORKDIR /tmp/shards
ARG shards_version=0.17.1
RUN curl --retry 5 -sL https://github.com/crystal-lang/shards/archive/refs/tags/v${shards_version}.tar.gz | \
  tar -zxf- --strip-components=1 && \
  gzip -9 man/shards.1 man/shard.yml.5 && \
  make bin/shards static=1 release=1 FLAGS="--no-debug --cross-compile --target=$TARGETARCH-alpine-linux-musl" | tail -1 > bin/shards.sh

FROM alpine:$alpine_version AS target-builder
ARG llvm_version=13
RUN apk add --update --no-cache \
    llvm${llvm_version}-dev llvm${llvm_version}-static \
    zlib-static yaml-static libxml2-dev pcre-dev libevent-static \
    libffi-dev git g++ make automake libtool autoconf curl
WORKDIR /tmp/libc
ARG gc_version=8.2.2
RUN curl --retry 5 -sL https://github.com/ivmai/bdwgc/archive/refs/tags/v${gc_version}.tar.gz | \
  tar -zxf- --strip-components=1 && \
  ./autogen.sh && \
  ./configure --disable-debug --disable-shared --enable-large-config --prefix=/usr && \
  make -j$(nproc) CFLAGS="-DNO_GETCONTEXT -pipe -fPIE -O3" && \
  make install
WORKDIR /tmp/crystal
COPY --from=builder /tmp/crystal/Makefile .
COPY --from=builder /tmp/crystal/src/llvm/ext src/llvm/ext
COPY --from=builder /tmp/crystal/.build .build
RUN make llvm_ext
RUN sh -ex .build/crystal.sh && strip .build/crystal
WORKDIR /tmp/shards
COPY --from=builder /tmp/shards/bin bin
RUN sh -ex bin/shards.sh && strip bin/shards

FROM alpine:$alpine_version as hoard
RUN apk add --update --no-cache coreutils \
    zlib-dev zlib-static libxml2-dev pcre-dev libevent-static \
    libffi-dev git g++ make automake libtool autoconf curl \
    musl-dev gcc pcre-dev libevent-dev clang clang-dev
WORKDIR /tmp
RUN git clone https://github.com/emeryberger/Hoard
RUN cd Hoard/src && make && cd ../.. && mv Hoard /usr/local/Hoard

FROM alpine:$alpine_version
RUN apk add --update --no-cache musl-dev gcc pcre-dev \
  libevent-dev libevent-static openssl-dev openssl-libs-static \
  libxml2-dev zlib-dev zlib-static git make gmp-dev yaml-static
COPY --from=builder /tmp/crystal/*.md /usr/share/doc/crystal/
COPY --from=builder /tmp/crystal/man/crystal.1.gz /usr/share/man/man1/
COPY --from=builder /tmp/shards/man/shards.1.gz /usr/share/man/man1/
COPY --from=builder /tmp/shards/man/shard.yml.5.gz /usr/share/man/man5/
COPY --from=builder /tmp/crystal/src /usr/share/crystal/src
COPY --from=target-builder /tmp/crystal/.build/crystal /usr/bin/
COPY --from=target-builder /tmp/shards/bin/shards /usr/bin/
COPY --from=target-builder /usr/lib/libgc.a /usr/lib/
COPY --from=hoard /usr/local/Hoard /usr/local/Hoard
ENTRYPOINT ["/usr/bin/crystal"]
